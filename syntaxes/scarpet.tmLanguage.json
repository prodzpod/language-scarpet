{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "scarpet",
	"patterns": [
		{
			"include": "#expressions"
		}
	],
	"repository": {
		"expressions": { "patterns": [
			{ "include": "#support" },
			{ "include": "#base" },
			{ "include": "#keyword" }
		]},
		"support": {
		  "name": "support.scarpet",
		  "patterns": [
			{
			  "name": "support.function.scarpet",
			  "patterns": [
				{
				  "name": "support.function.triggers.scarpet",
				  "match": "\\b(__command|__config|__on_player_jumps|__on_player_deploys_elytra|__on_player_wakes_up|__on_player_rides|__on_player_uses_item|__on_player_clicks_block|__on_player_right_clicks_block|__on_player_breaks_block|__on_player_interacts_with_entity|__on_player_attacks_entity|__on_player_starts_sneaking|__on_player_stops_sneaking|__on_player_starts_sprinting|__on_player_stops_sprinting|__on_player_releases_item|__on_player_finishes_using_item|__on_player_drops_item|__on_player_drops_stack|__on_tick|__on_tick_ender|__on_tick_nether)\\b"
				},
				{
				  "name": "support.function.code.scarpet",
				  "match": "\\b(call|outer|type|bool|number|str|length|rand|sleep|time|profile_expr|lower|upper|title|replace|replace_first)\\b"
				},
				{
				  "name": "support.function.access.scarpet",
				  "match": "\\b(var|undef|vars|if|loop|map|filter|first|all|for|while|reduce|continue|break)\\b"
				},
				{
				  "name": "support.function.nbt.scarpet",
				  "match": "\\b(get|put|has|delete)\\b"
				},
				{
				  "name": "support.function.strings.scarpet",
				  "match": "\\b(l|join|split|slice|sort|sort_key|range|m|keys|values|pairs|copy)\\b"
				},
				{
				  "name": "support.function.math.scarpet",
				  "match": "\\b(fact|rand|sin|cos|tan|asin|acos|atan|atan2|sinh|cosh|tanh|sec|csc|sech|csch|cot|acot|coth|asinh|acosh|atanh|rad|deg|log|log10|log1p|sqrt|max|min|abs|round|floor|ceil|mandelbrot|relu)\\b"
				},
				{
				  "name": "support.function.auxiliary.scarpet",
				  "match": "\\b(logger|sound|particle|particle_line|particle_rect|run|save|tick_time|game_tick|current_dimension|in_dimension|plop|harvest|destroy|schedule|nbt|create_marker|remove_all_markers|load_app_data|store_app_data|escape_nbt)\\b"
				},
				{
				  "name": "support.function.areas.scarpet",
				  "match": "\\b(scan|volume|neighbours|rect|diamond)\\b"
				},
				{
				  "name": "support.function.block.scarpet",
				  "match": "\\b(block|pos|pos_offset|solid|air|liquid|flammable|transparent|opacity|blocks_daylight|emitted_light|light|block_light|sky_light|see_sky|hardness|blast_resistance|top|loaded|suffocates|power|ticks_randomly|update|block_tick|random_tick|set|blocks_movement|block_sound|material|map_colour|property|block_properties|block_data|place_item|set_biome|biome|loaded_status|generation_status|chunk_tickets)\\b"
				},
				{
				  "name": "support.function.entity.scarpet",
				  "match": "\\b(player|spawn|entity_id|entity_list|entity_area|entity_selector|query|modify|entity_event)\\b"
				},
				{
				  "name": "support.function.items.scarpet",
				  "match": "\\b(stack_limit|item_category|inventory_size|inventory_has_items|inventory_get|inventory_set|inventory_find|inventory_remove|drop_item)\\b"
				},
				{
				  "name": "keyword.control.scarpet",
				  "match": "\\b(print|return|exit|throw|try)\\b"
				}
			  ]
			} 
		  ]
		},
		"keyword": {
		  "name": "keyword.scarpet",
		  "patterns": [
			{
			  "name": "keyword.operator.code.scarpet",
			  "match": "->|~|:"
			},
			{
			  "name": "keyword.operator.logical.scarpet",
			  "match": "&&|\\|\\||>|>=|<|<=|==|\\!=|\\!|\bnot\b"
			},
			{
		      "name": "keyword.operator.arithmetic.scarpet",
			  "match": "\\+|\\-|\\*|\\/|%|\\^|=|\\+=|<>"
			},
			{
			  "name": "keyword.operator.control.scarpet",
			  "match": ";|^\\$|,"
			},
			{
			  "name": "support.constant.scarpet",
			  "match": "\\b(euler|pi)\\b"
			},
			{
			  "name": "constant.language.scarpet",
			  "match": "\\b(null|true|false)\\b"
			},
			{
			  "name": "support.variable.scarpet",
			  "match": "\\b(_|_i|_a|_x|_y|_z)\\b"
			},
			{
			  "name": "variable.language.scarpet",
			  "match": "\\b(x|y|z|p)\\b"
			},
			{
			  "name": "storage.modifier.scarpet",
			  "match": "\\bglobal_"
			}
		  ]
		},
		"base": {
		  "name": "constant.scarpet",
		  "patterns": [
			  {
				"name": "comment.line.double-slash",
				"match": "(?<!\\\\)//.*"
			  },
			  {
				"name": "constant.numeric.scarpet",
				"patterns": [
				  {
					"name": "constant.numeric.decimal.scarpet",
					"match": "\\b(\\d+(\\.\\d+)?(e(\\+|-)\\d+)?)\\b"
				  },
				  {
					"name": "constant.numeric.hexadecimal.scarpet",
					"match": "\\b(0x[0-9A-Fa-f]+)\\b"
				  }
				]
			  },
			  {
				"name": "string.quoted.single.scarpet",
				"begin": "'",
				"end": "'",
				"patterns": [
				  {
					"name": "string.quoted.scarpet",
					"match": "[^\\\\\\'\\n]"
				  },
				  {
					"name": "constant.character.escape.scarpet",
					"match": "\\\\[^\\n]"
				  },
				  {
					"name": "invalid.illegal.scarpet",
					"match": "\\\\"
				  }
				]
			  },
			  {
				"begin": "\\b[A-Za-z_]\\w*\\s*(?=\\()\\b",
				"end": "\\)",
				"beginCaptures": { "0": { "name": "entity.name.function.scarpet" }},
				"patterns": [{
					"name": "variable.parameter",
					"match": "\\b[A-Za-z_]\\w*\\b"
				}]
			  }
		  ]
		}
	  },
	"scopeName": "source.scarpet"
}